ServerPager.read should probably be sending an HTTP GET instead of a POST.
But then the URL template idea wouldn't make much sense because the requestModel would be added to the URL anyway.
And why would we want to split the request parameters between the URL and the body?
There's also the problem of supporting routes: controller/action/{{id}}.
If the id is POSTed in the body instead, will the router pick it up?
If we use a URL template with a POST, the values in the URL should be excluded from the body.
This might be another good reason to create a Template class. 
The Template class would maintain a list of tokens for the template. 
We could use this list of tokens to split the toolbar object into two objects: one for the URL, the other for the request body.
Or should we just create a function for splitting an object?
Should we create a way to configure the HTTP verbs for CRUD?

If a RequestModel is used as the read configuration option, paging may not work properly.
Should this option even be supported?

Currently it's not possible to pass a url to an event delegate call:
gridponent('#theGrid').rowSelected('http://server/app/controller/action/{{id}}');
Should this be supported?

Add page size config option (default to 25).

Empty table template

Allow the http module to be configured to use JSON or application/x-www-form-urlencoded.
